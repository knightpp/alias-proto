// Code generated by mockery v2.27.1. DO NOT EDIT.

package gamesvc

import mock "github.com/stretchr/testify/mock"

// mockIsMessage_Message is an autogenerated mock type for the isMessage_Message type
type mockIsMessage_Message struct {
	mock.Mock
}

type mockIsMessage_Message_Expecter struct {
	mock *mock.Mock
}

func (_m *mockIsMessage_Message) EXPECT() *mockIsMessage_Message_Expecter {
	return &mockIsMessage_Message_Expecter{mock: &_m.Mock}
}

// isMessage_Message provides a mock function with given fields:
func (_m *mockIsMessage_Message) isMessage_Message() {
	_m.Called()
}

// mockIsMessage_Message_isMessage_Message_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'isMessage_Message'
type mockIsMessage_Message_isMessage_Message_Call struct {
	*mock.Call
}

// isMessage_Message is a helper method to define mock.On call
func (_e *mockIsMessage_Message_Expecter) isMessage_Message() *mockIsMessage_Message_isMessage_Message_Call {
	return &mockIsMessage_Message_isMessage_Message_Call{Call: _e.mock.On("isMessage_Message")}
}

func (_c *mockIsMessage_Message_isMessage_Message_Call) Run(run func()) *mockIsMessage_Message_isMessage_Message_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *mockIsMessage_Message_isMessage_Message_Call) Return() *mockIsMessage_Message_isMessage_Message_Call {
	_c.Call.Return()
	return _c
}

func (_c *mockIsMessage_Message_isMessage_Message_Call) RunAndReturn(run func()) *mockIsMessage_Message_isMessage_Message_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTnewMockIsMessage_Message interface {
	mock.TestingT
	Cleanup(func())
}

// newMockIsMessage_Message creates a new instance of mockIsMessage_Message. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockIsMessage_Message(t mockConstructorTestingTnewMockIsMessage_Message) *mockIsMessage_Message {
	mock := &mockIsMessage_Message{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
