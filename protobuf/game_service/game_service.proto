syntax = "proto3";

package game_service;

option go_package = "github.com/knightpp/alias-proto/go/gamesvc/";

service GameService {
  rpc ListRooms(ListRoomsRequest) returns (ListRoomsResponse);

  rpc CreateRoom(CreateRoomRequest) returns (CreateRoomResponse);
  // rpc UpdateRoom

  rpc Join(stream Message) returns (stream Message);
}

message ListRoomsRequest {}
message ListRoomsResponse { repeated Room rooms = 1; }

message CreateRoomRequest {
  string name = 1;
  bool is_public = 2;
  string langugage = 3;
  optional string password = 4;
}

message CreateRoomResponse { string id = 1; }

message Room {
  string id = 1;
  string name = 2;
  string leader_id = 3;
  bool is_public = 4;
  string langugage = 5;
  repeated Player lobby = 6;
  repeated Team teams = 7;

  bool is_playing = 8;
  bool is_game_started = 9;

  string player_id_turn = 10;
}

message Player {
  string id = 1;
  string name = 2;
  string gravatar_url = 3;
}

message Team {
  string id = 1;
  string name = 2;
  Player player_a = 3;
  Player player_b = 4;
}

message MsgError { string error = 1; }

message UpdateRoom {
  Room room = 1;
  optional string password = 2;
}

message MsgCreateTeam { string name = 1; }

message MsgTeamCreated { Team team = 1; }

message MsgJoinTeam { string team_id = 1; }

message MsgStartGame { repeated string turns = 1; }

message MsgStartTurn { uint64 duration_ms = 1; }

message MsgEndTurn {
  uint32 rights = 1;
  uint32 wrongs = 2;
}

message MsgTransferLeadership { string player_id = 1; }

message MsgWord { string word = 1; }

message Message {
  oneof message {
    MsgError error = 1;
    UpdateRoom update_room = 2;

    MsgCreateTeam create_team = 3;
    MsgJoinTeam join_team = 4;

    MsgStartGame start_game = 5;
    MsgStartTurn start_turn = 6;
    MsgEndTurn end_turn = 7;
    MsgWord word = 8;

    MsgTransferLeadership transfer_leadership = 9;
    MsgTeamCreated team_created = 10;
  }
}
